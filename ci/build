#!/bin/bash

set -eo pipefail

tag() {
    echo -e "\033[1mTagging image: \033[32m${2}\033[0m"
    docker tag "${1}" "${2}"
}

build() {
    echo -e "\033[1mBuilding image: \033[32m${2}\033[1m\033[0m"
    docker buildx create --name gitlab >/dev/null
    docker buildx use gitlab

    docker buildx build --no-cache --force-rm --compress \
     --platform "${1}" -t "${2}" -f "${3}" "${4}"

#    docker buildx build --no-cache --force-rm --compress \
#     --iidfile "id.txt" --platform "${1}" -f "${3}" "${4}"
#    cat "id.txt"
#    imgid="$(cat id.txt)"
#    tag "${imgid}" "${2}"

    docker buildx stop gitlab
    docker buildx rm gitlab
}

# Set the version to install
if [ "$TARGET" = "arm64" ]; then
    RELEASE_FILE="docker/arm64/RELEASE"
    DOCKERFILE=docker/arm64/dockerfile
    PLATFORM="linux/arm64"
elif [ "$TARGET" = "arm32" ]; then
    RELEASE_FILE="docker/arm32/RELEASE"
    DOCKERFILE=docker/arm32/dockerfile
    PLATFORM="linux/arm/v7"
else
    echo "unkown architecture >$TARGET<" >&2
    exit 1
fi
sed -i -e 's/CE_VERSION/'"$CE_VERSION"'/g' "$RELEASE_FILE"

# Build the actual image
build "${PLATFORM}" "${IMAGE}:${TARGET}" "${DOCKERFILE}" "docker/"
